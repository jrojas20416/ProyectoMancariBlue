<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Mancari Blue</title>
    <link rel="stylesheet" type="text/css" href="~/css/main.css">
    <link href="~/lib/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <!-- Font-icon css-->
    <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link href="~/css/select2.min.css" rel="stylesheet" />
</head>
<body class="app sidebar-mini">

    <style>
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 9998;
        }

        .spinner {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 9999;
            background-color: rgba(255, 255, 255, 0.8);
            padding: 20px;
            border-radius: 5px;
            text-align: center;
        }

            .spinner i.fa-spinner {
                color: #3498db;
                font-size: 24px;
            }

    </style>
    <header class="app-header">
        <a class="app-header__logo" asp-controller="Home" asp-action="Index">MANCARI BLUE</a>
        <!-- <img src="~/img/logo.png" class="logo-image" width="30px" height="auto">  -->
        <!-- Sidebar toggle button--><a class="app-sidebar__toggle" href="#" data-toggle="sidebar" aria-label="Hide Sidebar"></a>

        <ul class="app-nav">
            <!-- User Menu-->
            <li class="dropdown">
                <a class="app-nav__item" href="#" data-toggle="dropdown" aria-label="Open Profile Menu"><i class="fa fa-user fa-lg"></i></a>
                <ul class="dropdown-menu settings-menu dropdown-menu-right">
                    <li><a class="dropdown-item" asp-controller="Empleado" asp-action="CambiarContrasena"><i class="fa fa-lock fa-lg"></i> Cambiar Contraseña</a></li>
                    <li><a class="dropdown-item" href="#" onclick="confirmarCerrarSesion(event)"><i class="fa fa-sign-out fa-lg"></i> Cerrar Sesión</a></li>

                </ul>
            </li>
        </ul>
    </header>
    <!-- Sidebar menu-->
    <div class="app-sidebar__overlay" data-toggle="sidebar"></div>
    <aside class="app-sidebar">
        <div class="app-sidebar__user">
            <div>
                @if (Context.Request.Cookies.ContainsKey("NombreCompleto"))
                {
                    var nombreCompleto = Context.Request.Cookies["NombreCompleto"];
                    @nombreCompleto
                }
                else
                {
                    <span>User</span>
                }

                </br>
                @if (Context.Request.Cookies.ContainsKey("RolDescription"))
                {
                    var rol = Context.Request.Cookies["RolDescription"];
                    @rol
                }
                else
                {
                    <span>User</span>
                }
            </div>
        </div>
        <ul class="app-menu">
            <li><a class="app-menu__item" asp-action="Index" asp-controller="Home"><i class="app-menu__icon fa fa-tachometer"></i><span class="app-menu__label">Dashboard</span></a></li>
             <li class="nav-item dropdown" id="dropdownMenu">
            <a class="app-menu__item dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="app-menu__icon fa fa-users"></i>
            <span class="app-menu__label">Módulo Empleados</span>
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
            <a class="dropdown-item" asp-action="GetEmpleados" asp-controller="Empleado">Empleados</a>
            <a class="dropdown-item" asp-action="Index" asp-controller="Vacacion">Vacaciones</a>
            <a class="dropdown-item" asp-action="IndexPrestacion" asp-controller="Empleado">Prestaciones</a>
            </div>
            </li>

        </ul>
    </aside>
    <main role="main" class="app-content">
        @RenderBody()
    </main>
    @*//Spinner*@
    <div id="overlay" class="overlay"></div>

    <div id="spinner" class="spinner">
        <i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>
        <span class="sr-only">Loading...</span>
    </div>


    <script src="~/js/jquery-3.3.1.min.js"></script>

    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/plugins/chart.js"></script>
    <script src="~/js/plugins/pace.min.js"></script>
    <script src="~/lib/sweetalert2/sweetalert2.min.js"></script>
    <script type="text/javascript" src="~/js/plugins/chart.js"></script>
    <script src="~/js/main.js"></script>
    <script src="~/js/moment.js"></script>
    <script src="~/js/select2.min.js"></script>
    @if (!string.IsNullOrEmpty(TempData["AlertMessage"] as string))
    {
        <script>
            Swal.fire({
                icon: '@TempData["AlertType"]',
                title: '@TempData["AlertMessage"]',
                showConfirmButton: false,
                timer: 3000 // Duración de la alerta en milisegundos (2 segundos en este ejemplo)
            }).then(function () {
                // Limpiar TempData después de mostrar la alerta
                '@TempData.Remove("AlertType")';
                '@TempData.Remove("AlertMessage")';
            });
        </script>
    }
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        function confirmarCerrarSesion(event) {
            event.preventDefault();

            Swal.fire({
                title: '¿Estás seguro?',
                text: "Se cerrará la sesión actual.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, cerrar sesión',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {

                    window.location.href = '@Url.Action("CerrarSesion", "Empleado")';
                }
            });
        }


        function OpenModal(modal) {

            $("#" + modal).modal("show");

        }

        function GetDropDownValueSelected(inputId, dataListP) {
            var inputElement = document.getElementById(inputId);
            var selectedText = inputElement.value;

            var dataList = document.getElementById(dataListP);
            var selectedValue = null;

            for (var i = 0; i < dataList.options.length; i++) {
                if (dataList.options[i].textContent.toLowerCase() === selectedText.toLowerCase()) {
                    selectedValue = dataList.options[i].value;
                    return selectedValue;
                }
            }
            return selectedValue;
        }

        function removeAccents(text) {
            return text.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
        }

        function GetDropDownTextContentSelected(inputId, dataListP) {
            var inputElement = document.getElementById(inputId);
            var selectedText = inputElement.value;

            var dataList = document.getElementById(dataListP);
            var selectedValue = null;

            for (var i = 0; i < dataList.options.length; i++) {
                if (dataList.options[i].textContent.toLowerCase() === selectedText.toLowerCase()) {
                    selectedValue = dataList.options[i].textContent;
                    return selectedValue;
                }
            }
            return selectedValue;
        }

        function ValidateEmail(email) {
            var regularExpression = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

            return regularExpression.test(email);
        }

        function showSpinner() {
            $("#overlay").show();
            $("#spinner").show();
        }

        function hideSpinner() {
            $("#overlay").hide();
            $("#spinner").hide();
        }

        function GetDropDownValueSelected(inputId, dataListP) {
            var inputElement = document.getElementById(inputId);
            var selectedText = inputElement.value;

            var dataList = document.getElementById(dataListP);
            var selectedValue = null;

            for (var i = 0; i < dataList.options.length; i++) {
                if (dataList.options[i].textContent.toLowerCase() === selectedText.toLowerCase()) {
                    selectedValue = dataList.options[i].value;
                    return selectedValue;
                }
            }
            return selectedValue;
        }

        function GetDropDownTextContentSelected(inputId, dataListP) {
            var inputElement = document.getElementById(inputId);
            var selectedText = inputElement.value;

            var dataList = document.getElementById(dataListP);
            var selectedValue = null;

            for (var i = 0; i < dataList.options.length; i++) {
                if (dataList.options[i].textContent.toLowerCase() === selectedText.toLowerCase()) {
                    selectedValue = dataList.options[i].textContent;
                    return selectedValue;
                }
            }
            return selectedValue;
        }

        function ActivateInputEvent(txtId) {
            var eventoInput = new Event('input', {
                bubbles: true,
                cancelable: true,
            });


            document.getElementById(txtId).dispatchEvent(eventoInput);
        }
        function checkInput(input) {
            input.value = input.value.replace(/[^a-zA-Z\s]+/g, '');
        }
        function checkInputNumber(input) {
            input.value = input.value.replace(/[^0-9]/g, '');
            if (input.value.length > 8) {
                input.value = input.value.substr(0, 8);
            }
        }



    </script>
    @await RenderSectionAsync("Scripts", required: false)
    @await RenderSectionAsync("modals", required: false)
</body>
</html>