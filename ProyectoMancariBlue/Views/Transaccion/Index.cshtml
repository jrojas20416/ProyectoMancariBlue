@using Newtonsoft.Json;
@using ProyectoMancariBlue.Models.Enum;
@model ProyectoMancariBlue.Models.Obj.Request.TransaccionRequest;



@{
    ViewData["Title"] = "Transacciones";
    string layoutName = Context.Request.Cookies["Layout"] ?? "_Layout";
    Layout = layoutName ?? "_Layout";
}
@functions {

    string NombreCompleto(string n, string a)
    {
        return n + " " + a;

    }
    public static string FormatearColones(decimal? cantidad)
    {
        return string.Format(new System.Globalization.CultureInfo("es-CR"), "{0:C}", cantidad.Value);
    }
}
<div class="app-title">
    <div>
        <h1><i class="fa fa-th-list" style="margin-right: 10px;"></i>Administración de Transaccion</h1>
        <p>Transacciones</p>
        <br>
        <a onclick="OpenModal('mdlAddCompra')" class="btn btn-primary" style="color:white;"><i class="fa fa-plus" aria-hidden="true"></i>Crear Transaccion de Compra</a>      <a onclick="OpenModal('mdlAddVenta')" style="color:white;" class="btn btn-primary"><i class="fa fa-plus" aria-hidden="true"></i>Crear Transaccion de Venta</a>
    </div>
    <ul class="app-breadcrumb breadcrumb side">
        <li class="breadcrumb-item"><i class="fa fa-home fa-lg"></i></li>
        <li class="breadcrumb-item">Transacciones</li>
    </ul>
</div>
<div class="row" style="flex-direction:column">
    <div class="col-md-14">
        <div class="tile">
            <h4>Transacciones de Compra</h4>
            <div class="tile-body">
                <div class="table-responsive">
                    @if (Model.CompraDTOs != null && Model.CompraDTOs.Count() > 0)
                    {
                        <table class="table table-hover table-bordered" id="ttransaccionc">
                            <thead>
                                <tr>
                                 
                                    <th>
                                        Proveedor
                                    </th>
                                    <th>
                                        Tipo de producto
                                    </th>
                                    <th>
                                        Producto/Animal
                                    </th>
                                    <th>
                                        Descripción
                                    </th>
                                    <th>
                                        Fecha
                                    </th>
                                    <th>
                                        Importe
                                    </th>
                                    <th>
                                        Acciones
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var compra in Model.CompraDTOs)
                                {
                                    <tr>
                                      
                                        <td>
                                            @compra.Proveedor.Nombre
                                        </td>

                                        <td>
                                            @compra.IdTipoProducto
                                        </td>
                                        @if (compra.Animal != null)
                                        {
                                            <td>
                                                @compra.Animal.Codigo
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                @compra.Producto.Nombre
                                            </td>
                                        }
                                        <td>
                                            @compra.Descripcion
                                        </td>
                                        <td>
                                            @compra.FechaCompra.Value.ToShortDateString()
                                        </td>
                                        <td>
                                            @FormatearColones(compra.Importe)
                                        </td>
                                        <td>
                                            @* <a class="btn btn-primary" onclick="OpenModalModifyCompra(this,'mdlModifyCompra',0)" data-registro='@JsonConvert.SerializeObject(compra)' style="color:white;" >Editar</a> *@
                                            <a class="btn btn-info" onclick="OpenModalModifyCompra(this,'mdlModifyCompra',1)" data-registro='@JsonConvert.SerializeObject(compra)' style="color:white;">Detalle</a>
                                            <a class="btn btn-danger cambiar-estado-btn" data-id='@compra.Id' style="color:white;">Anular</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <h3>No se han encontrado registros</h3>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row" style="flex-direction:column">
    <div class="col-md-14">
        <div class="tile">
            <h4>Transacciones de Venta</h4>
            <div class="tile-body">
                <div class="table-responsive">
                    @if (Model.CompraDTOs != null && Model.CompraDTOs.Count() > 0)
                    {
                        <table class="table table-hover table-bordered" id="ttransaccionv">
                            <thead>
                                <tr>
                                    <th>
                                        Identificación
                                    </th>
                                    <th>
                                        Cliente
                                    </th>
                                    <th>
                                        Descripción
                                    </th>
                                    <th>
                                        Fecha
                                    </th>
                                    <th>
                                        Importe
                                    </th>
                                    <th>
                                        Acciones
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var venta in Model.ventaDTOs)
                                {
                                    <tr>
                                       
                                        <td>
                                            @venta.CedulaCliente
                                        </td>
                                        <td>
                                            @venta.NombreCliente
                                        </td>
                                        <td>
                                            @venta.Descripcion
                                        </td>
                                        <td>
                                            @venta.FechaVenta.Value.ToShortDateString()
                                        </td>
                                        <td>
                                            @FormatearColones(venta.Importe)
                                        </td>
                                        <td>
                                          @*   <a class="btn btn-primary" onclick="OpenModalModifyVenta(this,'mdlModifyVenta',0)" data-registro='@JsonConvert.SerializeObject(venta)'>Editar</a> *@
                                            <a class="btn btn-info" onclick="OpenModalInfoGanado(this,'mdlInfoGanado')" data-reporte='@JsonConvert.SerializeObject(venta)' style="color:white">Ver animales</a>
                                            <a class="btn btn-danger cambiar-estado-btn-Venta" data-id='@venta.Id' style="color:white;">Anular</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <h3>No se han encontrado registros</h3>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@*Modal to add Compra*@
<div class="modal fade" id="mdlAddCompra">
    <div class="modal-dialog modal-lg dialogPDF">
        <div class="modal-content contentPDF">
            <div class="modal-header" style="background-color: #007C89; color:white; justify-content: center; ">
                <h5 class="modal-title">Agregar Compra</h5>
            </div>
            <form asp-controller="Transaccion" asp-action="CrearCompra" method="post">
                <div class="modal-body">
                    <input type="hidden" id="hdfEstado" value="0" />
                    <input type="hidden" id="hdfId" value="0" />
                    <div class="row" style=" padding-left: 1rem;">
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlAddTipoProductoModal">Tipo de producto</label>
                                    <input type="text" id="ddlAddTipoProductoModal" list="AddTipoProductolList" class="form-control" placeholder="Buscar tipo de producto..." autocomplete="off">
                                    <input type="hidden" name="IdTipoProducto" id="AddIdCompraTipoProducto" asp-for="CompraCreate.IdTipoProducto" />
                                    <datalist id="AddTipoProductolList">
                                        @{
                                            foreach (var value in Enum.GetValues(typeof(EProductType)))
                                            {
                                                var productoType = (EProductType)value;
                                                <option value="@((int)productoType)" data-id="@((int)productoType)">@productoType.GetDisplayNameProductType()</option>
                                            }
                                        }
                                    </datalist>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="div_Animales">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlAddCompraAnimalModal">Seleccione el animal</label>
                                    <input type="text" id="ddlAddCompraAnimalModal" list="AddCompraAnimallList" class="form-control" placeholder="Buscar Animal..." autocomplete="off">
                                    <input type="hidden" name="IdAnimal" id="AddIdCompraAniaml" asp-for="CompraCreate.IdAnimal" />
                                    <datalist id="AddCompraAnimallList">

                                        @*   @{
                                        foreach (var value in Enum.GetValues(typeof(ECattle)))
                                        {
                                        var cattle = (ECattle)value;
                                        <option value="@((int)cattle)">@cattle.GetDisplayName()</option>
                                        }
                                        } *@
                                    </datalist>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="div_Productoes">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlAddCompraProductoModal">Seleccione el Producto</label>
                                    <input type="text" id="ddlAddCompraProductoModal" list="AddCompraProductolList" class="form-control" placeholder="Buscar Producto..." autocomplete="off">
                                    <input type="hidden" name="IdProducto" id="AddIdCompraProduct" asp-for="CompraCreate.IdProducto" />
                                    <datalist id="AddCompraProductolList">

                                        @*   @{
                                        foreach (var value in Enum.GetValues(typeof(ECattle)))
                                        {
                                        var cattle = (ECattle)value;
                                        <option value="@((int)cattle)">@cattle.GetDisplayName()</option>
                                        }
                                        } *@
                                    </datalist>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="divCantidad">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlAddCompraModal">Cantidad</label>
                                    <input type="text" id="txtCantidad" class="form-control" name="Cantidad" asp-for="CompraCreate.Cantidad" placeholder="Digite la cantidad" autocomplete="off">
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlAddCompraProveedorModal">Selecciona el proveedor</label>
                                    <input type="text" id="ddlAddCompraProveedorModal" list="AddCompraProveedorList" class="form-control" placeholder="Buscar proveedor..." autocomplete="off">
                                    <input type="hidden" name="IdProveedor" id="AddIdCompraProveedor" asp-for="CompraCreate.IdProveedor" />
                                    <datalist id="AddCompraProveedorList">

                                        @{
                                            if (Model.proveedorDTOs != null)
                                            {
                                                foreach (var item in Model.proveedorDTOs)
                                                {
                                                    <option value="@item.Id" data-id="@item.Id">@item.Nombre</option>
                                                }
                                            }
                                        }
                                    </datalist>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 " id="CompraEmContainer">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="CompraDescripcion">Descripción</label>
                                    <input type="text" id="txtCompraDescripcion" name="Descripcion" asp-for="CompraCreate.Descripcion" class="form-control" placeholder="Descripción">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 ">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="txtCompraImporte">Importe</label>
                                    <input type="number" id="txtCompraImporte" name="Importe" asp-for="CompraCreate.Importe" class="form-control" placeholder="Ingrese el importe de la compra" min="1" step="1">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="mb-3">
                                    <label for="lblDate" class="form-label">Fecha</label>
                                    <input type="date" class="form-control" name="FechaCompra" asp-for="CompraCreate.FechaCompra" id="dtDateCompraModal">
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <br />
                <div class="modal-footer">
                    <button type="submit" id="btnAddCompra" class="btn btn-primary">Aceptar</button>
                    <button type="button" id="btnCloseModalAddCompra" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                </div>
            </form>
        </div>
    </div>
</div>


@*Modal to Modify Compra*@
<div class="modal fade" id="mdlModifyCompra">
    <div class="modal-dialog modal-lg dialogPDF">
        <div class="modal-content contentPDF">
            <div class="modal-header" style="background-color: #007C89; color:white; justify-content: center; ">
                <h5 class="modal-title">Agregar Compra</h5>
            </div>
            <form asp-controller="Transaccion" asp-action="ModificarCompra" method="post">
                <div class="modal-body">
                    <input type="hidden" id="hdfEstado" value="0" />
                    <input type="hidden" name="Id" id="ModifyIdCompra" asp-for="CompraCreate.Id" />
                    <div class="row" style=" padding-left: 1rem;">
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlModifyTipoProductoModal">Tipo de producto</label>
                                    <input type="text" id="ddlModifyTipoProductoModal" list="ModifyTipoProductolList" class="form-control" placeholder="Buscar tipo de producto..." autocomplete="off">
                                    <input type="hidden" name="IdTipoProducto" id="ModifyIdCompraTipoProducto" asp-for="CompraCreate.IdTipoProducto" />
                                    <datalist id="ModifyTipoProductolList">
                                        @{
                                            foreach (var value in Enum.GetValues(typeof(EProductType)))
                                            {
                                                var productoType = (EProductType)value;
                                                <option value="@((int)productoType)" data-id="@((int)productoType)">@productoType.GetDisplayNameProductType()</option>
                                            }
                                        }
                                    </datalist>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="div_AnimalesModify">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlModifyCompraAnimalModal">Seleccione el animal</label>
                                    <input type="text" id="ddlModifyCompraAnimalModal" list="ModifyCompraAnimallList" class="form-control" placeholder="Buscar Animal..." autocomplete="off">
                                    <input type="hidden" name="IdAnimal" id="ModifyIdCompraAniaml" asp-for="CompraCreate.IdAnimal" />
                                    <datalist id="ModifyCompraAnimallList">

                                        @*   @{
                                        foreach (var value in Enum.GetValues(typeof(ECattle)))
                                        {
                                        var cattle = (ECattle)value;
                                        <option value="@((int)cattle)">@cattle.GetDisplayName()</option>
                                        }
                                        } *@
                                    </datalist>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="div_ProductoesModify">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlModifyCompraProductoModal">Seleccione el Producto</label>
                                    <input type="text" id="ddlModifyCompraProductoModal" list="ModifyCompraProductolList" class="form-control" placeholder="Buscar Producto..." autocomplete="off">
                                    <input type="hidden" name="IdProducto" id="ModifyIdCompraProduct" asp-for="CompraCreate.IdProducto" />
                                    <datalist id="ModifyCompraProductolList">

                                        @*   @{
                                        foreach (var value in Enum.GetValues(typeof(ECattle)))
                                        {
                                        var cattle = (ECattle)value;
                                        <option value="@((int)cattle)">@cattle.GetDisplayName()</option>
                                        }
                                        } *@
                                    </datalist>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="divCantidadModify">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlModifyCompraModal">Cantidad</label>
                                    <input type="text" id="txtCantidadModify" class="form-control" name="Cantidad" asp-for="CompraCreate.Cantidad" placeholder="Digite la cantidad" autocomplete="off">
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlModifyCompraProveedorModal">Selecciona el proveedor</label>
                                    <input type="text" id="ddlModifyCompraProveedorModal" list="ModifyCompraProveedorList" class="form-control" placeholder="Buscar proveedor..." autocomplete="off">
                                    <input type="hidden" name="IdProveedor" id="ModifyIdCompraProveedor" asp-for="CompraCreate.IdProveedor" />
                                    <datalist id="ModifyCompraProveedorList">

                                        @{
                                            if (Model.proveedorDTOs != null)
                                            {
                                                foreach (var item in Model.proveedorDTOs)
                                                {
                                                    <option value="@item.Id" data-id="@item.Id">@item.Nombre</option>
                                                }
                                            }
                                        }
                                    </datalist>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 " id="CompraEmContainer">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="CompraDescripcion">Descripción</label>
                                    <input type="text" id="txtCompraDescripcionModify" name="Descripcion" asp-for="CompraCreate.Descripcion" class="form-control" placeholder="Descripción">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 ">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="txtCompraImporte">Importe</label>
                                    <input type="number" id="txtCompraImporteModify" name="Importe" asp-for="CompraCreate.Importe" class="form-control" placeholder="Ingrese el importe de la compra" min="1" step="1">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="mb-3">
                                    <label for="lblDateModify" class="form-label">Fecha</label>
                                    <input type="date" class="form-control" name="FechaCompra" asp-for="CompraCreate.FechaCompra" id="dtDateCompraModalModify">
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <br />
                <div class="modal-footer">
                    <button type="submit" id="btnModifyCompra" class="btn btn-primary">Aceptar</button>
                    <button type="button" id="btnCloseModalModifyCompra" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*Modal to add venta*@
<div class="modal fade" id="mdlAddVenta">
    <div class="modal-dialog modal-lg dialogPDF">
        <div class="modal-content contentPDF">
            <div class="modal-header" style="background-color: #007C89; color:white; justify-content: center; ">
                <h5 class="modal-title">Agregar Venta</h5>
            </div>
            <form asp-controller="Transaccion" asp-action="CrearVenta" method="post">
                <div class="modal-body">
                    <input type="hidden" id="hdfEstado" value="0" />
                    <input type="hidden" id="hdfId" value="0" />
                    <div class="row" style=" padding-left: 1rem;">
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="div_Animales">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlAddVentaIdentificacionClienteModal">Identificación del cliente</label>
                                    <input type="text" id="ddlAddVentaIdentificacionClienteModal" name="CedulaCliente" asp-for="VentaCreate.CedulaCliente" class="form-control" placeholder="Identificación del cliente..." autocomplete="off">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 " id="VentaEmContainer">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="txtnombreclienteV">Nombre del cliente</label>
                                    <input type="text" id="txtnombreclienteV" name="NombreCliente" asp-for="VentaCreate.NombreCliente" class="form-control" placeholder="Nombre del cliente">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="div_Animales">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlAnimals">Seleccione los animales</label>
                                    <input type="hidden" name="IdAnimal" id="AddVentaListAnimal" asp-for="CompraCreate.IdAnimal" />
                                    <select id="ddlAnimals" name="AnimalesIds" class="form-control select2-multiple" multiple="multiple">
                                        @foreach (var animal in Model.VentaListaAnimal)
                                        {
                                            <option value="@animal.Id">@animal.Codigo</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 " id="VentaEmContainer">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="VentaDescripcion">Descripción</label>
                                    <input type="text" id="txtVentaDescripcion" name="Descripcion" asp-for="VentaCreate.Descripcion" class="form-control" placeholder="Descripción">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 ">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="txtVentaImporte">Importe</label>
                                    <input type="number" id="txtVentaImporte" name="Importe" asp-for="VentaCreate.Importe" class="form-control" placeholder="Ingrese el importe de la Venta" min="1" step="1">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="mb-3">
                                    <label for="lblDate" class="form-label">Fecha</label>
                                    <input type="date" class="form-control" name="FechaVenta" asp-for="VentaCreate.FechaVenta" id="dtDateVentaModal">
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <br />
                <div class="modal-footer">
                    <button type="submit" id="btnAddVenta" class="btn btn-primary">Aceptar</button>
                    <button type="button" id="btnCloseModalAddVenta" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*Modal to Modify venta*@
<div class="modal fade" id="mdlModifyVenta">
    <div class="modal-dialog modal-lg dialogPDF">
        <div class="modal-content contentPDF">
            <div class="modal-header" style="background-color: #007C89; color:white; justify-content: center; ">
                <h5 class="modal-title">Agregar Venta</h5>
            </div>
            <form asp-controller="Transaccion" asp-action="CrearVenta" method="post">
                <div class="modal-body">
                    <input type="hidden" id="hdfEstado" value="0" />
                    <input type="hidden" id="hdfId" value="0" />
                    <div class="row" style=" padding-left: 1rem;">
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="div_Animales">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlModifyVentaIdentificacionClienteModal">Identificación del cliente</label>
                                    <input type="text" id="ddlModifyVentaIdentificacionClienteModal" name="CedulaCliente" asp-for="VentaCreate.CedulaCliente" class="form-control" placeholder="Identificación del cliente..." autocomplete="off">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 " id="VentaEmContainer">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="txtnombreclienteV">Nombre del cliente</label>
                                    <input type="text" id="txtnombreclienteVModify" name="NombreCliente" asp-for="VentaCreate.NombreCliente" class="form-control" placeholder="Nombre del cliente">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0" id="div_Animales">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label for="ddlAnimal">Seleccione los animales</label>
                                    <input type="hidden" name="IdAnimal" id="ModifyVentaListAnimal" asp-for="CompraCreate.IdAnimal" />
                                    <select id="ddlAnimal" name="AnimalIds" class="form-control select2-multiple" multiple="multiple">
                                        @foreach (var animal in Model.VentaListaAnimal)
                                        {
                                            <option value="@animal.Id">@animal.Codigo</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 " id="VentaEmContainer">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="VentaDescripcion">Descripción</label>
                                    <input type="text" id="txtVentaDescripcionModify" name="Descripcion" asp-for="VentaCreate.Descripcion" class="form-control" placeholder="Descripción">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0 ">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="txtVentaImporte">Importe</label>
                                    <input type="number" id="txtVentaImporteModify" name="Importe" asp-for="VentaCreate.Importe" class="form-control" placeholder="Ingrese el importe de la Venta" min="1" step="1">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="mb-3">
                                    <label for="lblDate" class="form-label">Fecha</label>
                                    <input type="date" class="form-control" name="FechaVenta" asp-for="VentaCreate.FechaVenta" id="dtDateVentaModalModify">
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <br />
                <div class="modal-footer">
                    <button type="submit" id="btnModifyVenta" class="btn btn-primary">Aceptar</button>
                    <button type="button" id="btnCloseModalModifyVenta" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*Modal to Modify venta*@
<div class="modal fade" id="mdlModifyVenta">
    <div class="modal-dialog modal-lg dialogPDF">
        <div class="modal-content contentPDF">
            <div class="modal-header" style="background-color: #007C89; color:white; justify-content: center; ">
                <h5 class="modal-title">Agregar Venta</h5>
            </div>
            <form asp-controller="Transaccion" asp-action="CrearVenta" method="post">
                <div class="modal-body">
                    <input type="hidden" id="hdfEstado" value="0" />
                    <input type="hidden" id="hdfId" value="0" />
                    <div class="row" style=" padding-left: 1rem;">
                        
                    </div>

                </div>
                <br />
                <div class="modal-footer">
                    <button type="submit" id="btnModifyVenta" class="btn btn-primary">Aceptar</button>
                    <button type="button" id="btnCloseModalModifyVenta" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*Modal to Information Ganado*@
<div class="modal fade" id="mdlInfoGanado">
    <div class="modal-dialog modal-lg dialogPDF">
        <div class="modal-content contentPDF">
            <div class="modal-header" style="background-color: #007C89; color:white; justify-content: center; ">
                <h5 class="modal-title">Información Ganado</h5>
            </div>
            <div class="modal-body">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                        <div id="informacionAnimalContainer">
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="modal-footer">
                <button type="button" id="btnCloseModalInfoGanado" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/js/plugins/jquery.datatables.min.js"></script>
    <script src="~/js/plugins/datatables.bootstrap.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#ttransaccionc').DataTable();
            $('#ttransaccionv').DataTable();


            $("#div_Animales").hide();
            $("#div_Productoes").hide();
            $("#divCantidad").hide();

            $('.cambiar-estado-btn').click(function (event) {

                event.preventDefault();

                var id = $(this).data('id');

                Swal.fire({
                    title: '¿Estás seguro que desea anular el registro?',
                    text: "¡No podrás revertir esto!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/Transaccion/ValidarEliminacionCompra/' + id,
                            type: 'DELETE',
                            success: function (result) {
                                if (result.success) {
                                    Swal.fire({
                                        title: 'Éxito',
                                        text: result.message,
                                        icon: 'success'
                                    }).then(() => {

                                        window.location.href = '@Url.Action("Index", "Transaccion")';
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Error',
                                        text: result.message,
                                        icon: 'error'
                                    });
                                }
                            }
                        });
                    }
                });
            });

            $('.cambiar-estado-btn-Venta').click(function (event) {

                event.preventDefault();

                var id = $(this).data('id');

                Swal.fire({
                    title: '¿Estás seguro que desea anular el registro?',
                    text: "¡No podrás revertir esto!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/Transaccion/ValidarEliminacionVenta/' + id,
                            type: 'DELETE',
                            success: function (result) {
                                if (result.success) {
                                    Swal.fire({
                                        title: 'Éxito',
                                        text: result.message,
                                        icon: 'success'
                                    }).then(() => {

                                        window.location.href = '@Url.Action("Index", "Transaccion")';
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Error',
                                        text: result.message,
                                        icon: 'error'
                                    });
                                }
                            }
                        });
                    }
                });
            });

            $('#ddlAnimals').select2({
                placeholder: "Seleccione los animales...",
                allowClear: true,
                width: '100%'
            }).on("select2:select", function (e) {
                var selectedElementId = e.params.data.id;
                var selectElement = $(this);

                console.log("Elemento seleccionado ID: " + selectedElementId);

                var selectedIds = selectElement.val();
                console.log("Array de IDs seleccionados: ", selectedIds); 

                if (selectedIds) {
                    $('#AddVentaListAnimal').val(selectedIds.join(','));
                    console.log("Selected IDs after selection: " + selectedIds.join(','));
                } else {
                    console.log("No se encontraron IDs seleccionados.");
                }

            }).on("select2:unselect", function (e) {
                var unselectedElementId = e.params.data.id;
                var selectElement = $(this);

                console.log("Elemento deseleccionado ID: " + unselectedElementId); 

                var selectedIds = selectElement.val();
                console.log("Array de IDs seleccionados después de deseleccionar: ", selectedIds);  

                if (selectedIds) {
                    $('#AddVentaListAnimal').val(selectedIds.join(','));
                    console.log("Selected IDs after deselection: " + selectedIds.join(','));
                } else {
                    console.log("No se encontraron IDs seleccionados después de deseleccionar.");
                }
            });




            $('form').on('submit', function (e) {
                showSpinner();

                e.preventDefault();

                var form = $(this);
                var url = form.attr('action');

                console.log(form.serialize());
                setTimeout(function () {


                    $.ajax({
                        type: 'POST',
                        url: url,
                        data: form.serialize(),
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Éxito',
                                    text: response.message,
                                    icon: 'success'
                                }).then(() => {
                                    window.location.href = '@Url.Action("Index", "Transaccion")';
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error',
                                    text: response.message,
                                    icon: 'error'
                                });
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.error("Error en AJAX: ", textStatus, errorThrown);
                            console.error("Detalles: ", jqXHR.responseText);

                            Swal.fire({
                                title: 'Error',
                                text: 'Ocurrió un error inesperado: ' + errorThrown,
                                icon: 'error'
                            });
                        }
                    });

                    hideSpinner();
                }, 1000);
            });


            $('#ddlAddTipoProductoModal').on('input', function () {
                var selectedValue = $(this).val();
                var option = $('#AddTipoProductolList option').filter(function () {
                    return this.value == selectedValue;
                });
                var tipo = option.data('id');
                console.log(tipo);
                if (tipo != null) {
                    if (tipo === 3) {
                        $("#div_Animales").show();
                        $("#divCantidad").hide();
                        $("#div_Productoes").hide();
                    }
                    else {
                        $("#div_Productoes").show();
                        $("#divCantidad").show();
                        $("#div_Animales").hide();
                    }
                }
                else {

                    $("#divCantidad").hide();
                    $("#div_Productoes").hide();
                    $("#div_Animales").hide();
                    $("#ddlAddCompraProductoModal").val('');
                    $("#ddlAddCompraAnimalModal").val('');
                    $("#divCantidad").val('');
                    $("#AddIdCompraAniaml").val('');
                    $("#AddIdCompraProduct").val('');
                    $("#txtCantidad").val('');
                }


                if (option.length > 0) {


                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: tipo },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('AddCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('AddCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });
                }
            });


            InitializerEventDropDownListProductType('ddlAddTipoProductoModal', 'AddTipoProductolList', 'AddIdCompraTipoProducto');
            InitializerEventDropDownList('ddlAddCompraAnimalModal', 'AddCompraAnimallList', 'AddIdCompraAniaml');
            InitializerEventDropDownList('ddlAddCompraProductoModal', 'AddCompraProductolList', 'AddIdCompraProduct');
            InitializerEventDropDownList('ddlAddCompraProveedorModal', 'AddCompraProveedorList', 'AddIdCompraProveedor');

            InitializerEventDropDownListProductType('ddlModifyTipoProductoModal', 'ModifyTipoProductolList', 'ModifyIdCompraTipoProducto');
            InitializerEventDropDownList('ddlModifyCompraProductoModal', 'ModifyCompraProductolList', 'ModifyIdCompraProduct');
            InitializerEventDropDownList('ddlModifyCompraAnimalModal', 'ModifyCompraAnimallList', 'ModifyIdCompraAniaml');
            InitializerEventDropDownList('ddlModifyCompraProveedorModal', 'ModifyCompraProveedorList', 'ModifyIdCompraProveedor');


        });

        function InitializerEventDropDownList(DropDownInput, dataList, HDF) {
            var typingTimer;
            var doneTypingInterval = 1000;

            document.getElementById(DropDownInput).addEventListener("input", function () {
                clearTimeout(typingTimer);

                typingTimer = setTimeout(function () {
                    var inputValue = document.getElementById(DropDownInput).value.toLowerCase();
                    var inputObject = document.getElementById(DropDownInput);
                    var options = document.getElementById(dataList).options;

                    for (var i = 0; i < options.length; i++) {
                        var option = options[i];
                        var text = option.textContent.toLowerCase();

                        if (text.indexOf(removeAccents(inputValue)) !== -1) {
                            option.style.display = "block";
                        } else {
                            option.style.display = "none";
                        }
                    }
                    var selectedOption = null;
                    for (var i = 0; i < options.length; i++) {
                        if (options[i].value.toLowerCase() === inputObject.value.toLowerCase()) {
                            selectedOption = options[i];

                            break;
                        }
                    }
                    if (selectedOption) {
                        inputObject.value = selectedOption.textContent;
                        document.getElementById(HDF).value = selectedOption.getAttribute('data-id');



                    }
                    else {
                        document.getElementById(HDF).value = '';
                    }
                    if (GetDropDownValueSelected(DropDownInput, dataList) === null) {
                        inputObject.value = '';
                        inputObject.placeholder = "No se encontró el registro digitado";


                        typingTimer = setTimeout(function () {
                            inputObject.placeholder = "Seleccione una opción...";
                        }, 700)
                    }
                    else {


                        document.getElementById(DropDownInput).value = GetDropDownTextContentSelected(DropDownInput, dataList);
                        options[0].selected = true;
                    }
                }, doneTypingInterval);


            });
        }

        function InitializerEventDropDownListProductType(DropDownInput, dataList, HDF) {
            var typingTimer;
            var doneTypingInterval = 1000;

            document.getElementById(DropDownInput).addEventListener("input", function () {
                clearTimeout(typingTimer);

                typingTimer = setTimeout(function () {
                    var inputValue = document.getElementById(DropDownInput).value.toLowerCase();
                    var inputObject = document.getElementById(DropDownInput);
                    var options = document.getElementById(dataList).options;

                    for (var i = 0; i < options.length; i++) {
                        var option = options[i];
                        var text = option.textContent.toLowerCase();

                        if (text.indexOf(removeAccents(inputValue)) !== -1) {
                            option.style.display = "block";
                        } else {
                            option.style.display = "none";
                        }
                    }
                    var selectedOption = null;
                    for (var i = 0; i < options.length; i++) {
                        if (options[i].value.toLowerCase() === inputObject.value.toLowerCase()) {
                            selectedOption = options[i];

                            break;
                        }
                    }
                    if (selectedOption) {
                        inputObject.value = selectedOption.textContent;
                        document.getElementById(HDF).value = selectedOption.getAttribute('data-id');



                    }
                    else {
                        document.getElementById(HDF).value = '';
                    }
                    if (GetDropDownValueSelected(DropDownInput, dataList) === null) {
                        inputObject.value = '';
                        inputObject.placeholder = "No se encontró el registro digitado";

                        $("#div_Animales").hide();
                        $("#div_Productoes").hide();
                        $("#divCantidad").hide();
                        $("#ddlAddCompraProductoModal").val('');
                        $("#ddlAddCompraAnimalModal").val('');
                        $("#divCantidad").val('');
                        typingTimer = setTimeout(function () {
                            inputObject.placeholder = "Seleccione una opción...";
                        }, 700)
                    }
                    else {


                        document.getElementById(DropDownInput).value = GetDropDownTextContentSelected(DropDownInput, dataList);
                        options[0].selected = true;
                    }
                }, doneTypingInterval);


            });
        }
        function OpenModalModifyCompra(button, modal, option) {

            var CompraJson = button.getAttribute("data-registro");
            var registro = JSON.parse(CompraJson);
            console.log(registro);
            if (option === 0) {

                var fechaCompra = new Date(registro.FechaCompra);
                var formattedDate = fechaCompra.toISOString().split('T')[0];
                $("#ddlModifyTipoProductoModal").val(registro.IdTipoProducto);
                ActivateInputEvent('ddlModifyTipoProductoModal');
                if (registro.IdTipoProducto != 3) {
                    $("#txtCantidadModify").val(registro.Cantidad);

                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraProductoModal").val(registro.Cantidad);
                    ActivateInputEvent('ddlModifyCompraProductoModal');


                    $("#div_AnimalesModify").hide();
                    $("#div_ProductoesModify").show();
                    $("#divCantidadModify").show();
                }
                else {
                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraAnimalModal").val(registro.IdAnimal);
                    ActivateInputEvent('ddlModifyCompraAnimalModal');

                    $("#div_AnimalesModify").show();
                    $("#div_ProductoesModify").hide();
                    $("#divCantidadModify").hide();
                }


                $("#ddlModifyCompraProveedorModal").val(registro.IdProveedor);
                ActivateInputEvent('ddlModifyCompraProveedorModal');
                $("#txtCompraDescripcionModify").val(registro.Descripcion);
                $("#txtCompraImporteModify").val(registro.Importe);
                $("#dtDateCompraModalModify").val(formattedDate);
                $("#ModifyIdCompra").val(registro.Id);



                $('#ddlModifyCompraProveedorModal').prop('readonly', false);
                $('#txtCompraDescripcionModify').prop('readonly', false);
                $('#txtCompraImporteModify').prop('readonly', false);
                $('#dtDateCompraModalModify').prop('readonly', false);
                $('#ddlModifyCompraAnimalModal').prop('readonly', false);
                $('#ddlModifyCompraProductoModal').prop('readonly', false);
                $('#ddlModifyTipoProductoModal').prop('readonly', false);
                $('#ddlModifyCompraModal').prop('readonly', false);
                $('#txtCantidadModify').prop('readonly', false);
                $('#btnModifyCompra').show();


                OpenModal(modal);

            }
            else {
                var fechaCompra = new Date(registro.FechaCompra);
                var formattedDate = fechaCompra.toISOString().split('T')[0];
                $("#ddlModifyTipoProductoModal").val(registro.IdTipoProducto);
                ActivateInputEvent('ddlModifyTipoProductoModal');
                if (registro.IdTipoProducto != 3) {
                    $("#txtCantidadModify").val(registro.Cantidad);

                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraProductoModal").val(registro.Cantidad);
                    ActivateInputEvent('ddlModifyCompraProductoModal');


                    $("#div_AnimalesModify").hide();
                    $("#div_ProductoesModify").show();
                    $("#divCantidadModify").show();
                }
                else {
                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraAnimalModal").val(registro.IdAnimal);
                    ActivateInputEvent('ddlModifyCompraAnimalModal');

                    $("#div_AnimalesModify").show();
                    $("#div_ProductoesModify").hide();
                    $("#divCantidadModify").hide();
                }


                $("#ddlModifyCompraProveedorModal").val(registro.IdProveedor);
                ActivateInputEvent('ddlModifyCompraProveedorModal');
                $("#txtCompraDescripcionModify").val(registro.Descripcion);
                $("#txtCompraImporteModify").val(registro.Importe);
                $("#dtDateCompraModalModify").val(formattedDate);
                $("#ModifyIdCompra").val(registro.Id);



                $('#ddlModifyCompraProveedorModal').prop('readonly', true);
                $('#txtCompraDescripcionModify').prop('readonly', true);
                $('#txtCompraImporteModify').prop('readonly', true);
                $('#dtDateCompraModalModify').prop('readonly', true);
                $('#ddlModifyCompraAnimalModal').prop('readonly', true);
                $('#ddlModifyCompraProductoModal').prop('readonly', true);
                $('#ddlModifyTipoProductoModal').prop('readonly', true);
                $('#ddlModifyCompraModal').prop('readonly', true);
                $('#txtCantidadModify').prop('readonly', true);
                $('#btnModifyCompra').hide();




                OpenModal(modal);

            }

        }

        function OpenModalModifyVenta(button, modal, option) {

            var CompraJson = button.getAttribute("data-registro");
            var registro = JSON.parse(CompraJson);
            console.log(registro);
            if (option === 0) {

                var fechaVenta = new Date(registro.FechaVenta);
                var formattedDate = fechaVenta.toISOString().split('T')[0];
                $("#ddlModifyTipoProductoModal").val(registro.IdAnimal);
               
                if (registro.IdTipoProducto != 3) {
                    $("#txtCantidadModify").val(registro.Cantidad);

                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraProductoModal").val(registro.Cantidad);
                    ActivateInputEvent('ddlModifyCompraProductoModal');


                    $("#div_AnimalesModify").hide();
                    $("#div_ProductoesModify").show();
                    $("#divCantidadModify").show();
                }
                else {
                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraAnimalModal").val(registro.IdAnimal);
                    ActivateInputEvent('ddlModifyCompraAnimalModal');

                    $("#div_AnimalesModify").show();
                    $("#div_ProductoesModify").hide();
                    $("#divCantidadModify").hide();
                }


                $("#ddlModifyCompraProveedorModal").val(registro.IdProveedor);
                ActivateInputEvent('ddlModifyCompraProveedorModal');
                $("#txtCompraDescripcionModify").val(registro.Descripcion);
                $("#txtCompraImporteModify").val(registro.Importe);
                $("#dtDateCompraModalModify").val(formattedDate);
                $("#ModifyIdCompra").val(registro.Id);



                $('#ddlModifyCompraProveedorModal').prop('readonly', false);
                $('#txtCompraDescripcionModify').prop('readonly', false);
                $('#txtCompraImporteModify').prop('readonly', false);
                $('#dtDateCompraModalModify').prop('readonly', false);
                $('#ddlModifyCompraAnimalModal').prop('readonly', false);
                $('#ddlModifyCompraProductoModal').prop('readonly', false);
                $('#ddlModifyTipoProductoModal').prop('readonly', false);
                $('#ddlModifyCompraModal').prop('readonly', false);
                $('#txtCantidadModify').prop('readonly', false);
                $('#btnModifyCompra').show();


                OpenModal(modal);

            }
            else {
                var fechaCompra = new Date(registro.FechaCompra);
                var formattedDate = fechaCompra.toISOString().split('T')[0];
                $("#ddlModifyTipoProductoModal").val(registro.IdTipoProducto);
                ActivateInputEvent('ddlModifyTipoProductoModal');
                if (registro.IdTipoProducto != 3) {
                    $("#txtCantidadModify").val(registro.Cantidad);

                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraProductoModal").val(registro.Cantidad);
                    ActivateInputEvent('ddlModifyCompraProductoModal');


                    $("#div_AnimalesModify").hide();
                    $("#div_ProductoesModify").show();
                    $("#divCantidadModify").show();
                }
                else {
                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraAnimalModal").val(registro.IdAnimal);
                    ActivateInputEvent('ddlModifyCompraAnimalModal');

                    $("#div_AnimalesModify").show();
                    $("#div_ProductoesModify").hide();
                    $("#divCantidadModify").hide();
                }


                $("#ddlModifyCompraProveedorModal").val(registro.IdProveedor);
                ActivateInputEvent('ddlModifyCompraProveedorModal');
                $("#txtCompraDescripcionModify").val(registro.Descripcion);
                $("#txtCompraImporteModify").val(registro.Importe);
                $("#dtDateCompraModalModify").val(formattedDate);
                $("#ModifyIdCompra").val(registro.Id);



                $('#ddlModifyCompraProveedorModal').prop('readonly', true);
                $('#txtCompraDescripcionModify').prop('readonly', true);
                $('#txtCompraImporteModify').prop('readonly', true);
                $('#dtDateCompraModalModify').prop('readonly', true);
                $('#ddlModifyCompraAnimalModal').prop('readonly', true);
                $('#ddlModifyCompraProductoModal').prop('readonly', true);
                $('#ddlModifyTipoProductoModal').prop('readonly', true);
                $('#ddlModifyCompraModal').prop('readonly', true);
                $('#txtCantidadModify').prop('readonly', true);
                $('#btnModifyCompra').hide();




                OpenModal(modal);

            }

        }

        function OpenModalModifyVenta(button, modal, option) {

            var CompraJson = button.getAttribute("data-registro");
            var registro = JSON.parse(CompraJson);
            console.log(registro);
            if (option === 0) {

                var fechaVenta = new Date(registro.FechaVenta);
                var formattedDate = fechaVenta.toISOString().split('T')[0];
                $("#ddlModifyTipoProductoModal").val(registro.IdAnimal);

                if (registro.IdTipoProducto != 3) {
                    $("#txtCantidadModify").val(registro.Cantidad);

                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraProductoModal").val(registro.Cantidad);
                    ActivateInputEvent('ddlModifyCompraProductoModal');


                    $("#div_AnimalesModify").hide();
                    $("#div_ProductoesModify").show();
                    $("#divCantidadModify").show();
                }
                else {
                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraAnimalModal").val(registro.IdAnimal);
                    ActivateInputEvent('ddlModifyCompraAnimalModal');

                    $("#div_AnimalesModify").show();
                    $("#div_ProductoesModify").hide();
                    $("#divCantidadModify").hide();
                }


                $("#ddlModifyCompraProveedorModal").val(registro.IdProveedor);
                ActivateInputEvent('ddlModifyCompraProveedorModal');
                $("#txtCompraDescripcionModify").val(registro.Descripcion);
                $("#txtCompraImporteModify").val(registro.Importe);
                $("#dtDateCompraModalModify").val(formattedDate);
                $("#ModifyIdCompra").val(registro.Id);



                $('#ddlModifyCompraProveedorModal').prop('readonly', false);
                $('#txtCompraDescripcionModify').prop('readonly', false);
                $('#txtCompraImporteModify').prop('readonly', false);
                $('#dtDateCompraModalModify').prop('readonly', false);
                $('#ddlModifyCompraAnimalModal').prop('readonly', false);
                $('#ddlModifyCompraProductoModal').prop('readonly', false);
                $('#ddlModifyTipoProductoModal').prop('readonly', false);
                $('#ddlModifyCompraModal').prop('readonly', false);
                $('#txtCantidadModify').prop('readonly', false);
                $('#btnModifyCompra').show();


                OpenModal(modal);

            }
            else {
                var fechaCompra = new Date(registro.FechaCompra);
                var formattedDate = fechaCompra.toISOString().split('T')[0];
                $("#ddlModifyTipoProductoModal").val(registro.IdTipoProducto);
                ActivateInputEvent('ddlModifyTipoProductoModal');
                if (registro.IdTipoProducto != 3) {
                    $("#txtCantidadModify").val(registro.Cantidad);

                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraProductoModal").val(registro.Cantidad);
                    ActivateInputEvent('ddlModifyCompraProductoModal');


                    $("#div_AnimalesModify").hide();
                    $("#div_ProductoesModify").show();
                    $("#divCantidadModify").show();
                }
                else {
                    $.ajax({
                        url: '@Url.Action("UpdateAnimal", "Transaccion")',
                        type: 'GET',
                        data: { tipo: registro.IdTipoProducto },
                        success: function (data) {


                            if (data.isProduct) {
                                var dataList = document.getElementById('ModifyCompraProductolList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].nombre;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron productos disponibles.', 'error');
                                }
                            }
                            else {
                                var dataList = document.getElementById('ModifyCompraAnimallList');
                                console.log(data);
                                while (dataList.options.length > 0) {
                                    dataList.removeChild(dataList.options[0]);
                                }
                                console.log(data.list.length);
                                if (data.list.length > 0) {
                                    for (var i = 0; i < data.list.length; i++) {

                                        var option = document.createElement("option");
                                        option.value = data.list[i].id;
                                        option.text = data.list[i].codigo;
                                        option.dataset.id = data.list[i].id;
                                        dataList.appendChild(option);
                                    }
                                }
                                else {
                                    Swal.fire('', 'No se encontraron animales disponibles.', 'error');
                                }
                            }

                        },
                        error: function () {
                            alert('Error al obtener los animales.');
                        }
                    });


                    $("#ddlModifyCompraAnimalModal").val(registro.IdAnimal);
                    ActivateInputEvent('ddlModifyCompraAnimalModal');

                    $("#div_AnimalesModify").show();
                    $("#div_ProductoesModify").hide();
                    $("#divCantidadModify").hide();
                }


                $("#ddlModifyCompraProveedorModal").val(registro.IdProveedor);
                ActivateInputEvent('ddlModifyCompraProveedorModal');
                $("#txtCompraDescripcionModify").val(registro.Descripcion);
                $("#txtCompraImporteModify").val(registro.Importe);
                $("#dtDateCompraModalModify").val(formattedDate);
                $("#ModifyIdCompra").val(registro.Id);



                $('#ddlModifyCompraProveedorModal').prop('readonly', true);
                $('#txtCompraDescripcionModify').prop('readonly', true);
                $('#txtCompraImporteModify').prop('readonly', true);
                $('#dtDateCompraModalModify').prop('readonly', true);
                $('#ddlModifyCompraAnimalModal').prop('readonly', true);
                $('#ddlModifyCompraProductoModal').prop('readonly', true);
                $('#ddlModifyTipoProductoModal').prop('readonly', true);
                $('#ddlModifyCompraModal').prop('readonly', true);
                $('#txtCantidadModify').prop('readonly', true);
                $('#btnModifyCompra').hide();




                OpenModal(modal);

            }

        }


        function OpenModalInfoGanado(button, modal) {
            var reporteJson = button.getAttribute("data-reporte");
            var reporte = JSON.parse(reporteJson);

            console.log(reporte);

            $.ajax({
                url: '/Transaccion/ObtenerAnimales',
                data: { idAnimal: reporte.IdAnimal },
                type: 'GET',
                success: function (data) {
                    $('#informacionAnimalContainer').html(data);
                },
                error: function (error) {
                    console.log('Error al obtener la información del animal:', error);
                }
            });

            OpenModal(modal);
        }
    </script>

}