@using Newtonsoft.Json;
@using ProyectoMancariBlue.Models.Enum;
@model ProyectoMancariBlue.Models.Obj.Request.EmpleadoRequest

@{
    ViewData["Title"] = "Administradores";
    string layoutName = Context.Request.Cookies["Layout"] ?? "_Layout";
    Layout = layoutName ?? "_Layout";
}
@functions {
    string NombreCompleto(string n, string a)
    {
        return n + " " + a;

    }
}

<div class="app-title">
    <div>
        <h1><i class="fa fa-th-list" style="margin-right: 10px;"></i>Administración de Usuarios</h1>
        <p>Administradores</p>
        <br>
    </div>
    <ul class="app-breadcrumb breadcrumb side">
        <li class="breadcrumb-item"><i class="fa fa-home fa-lg"></i></li>
        <li class="breadcrumb-item">Administradores</li>
    </ul>
</div>

@if (Model.Empleado.Any())
{
    <div class="row">
        <div class="col-md-12">
            <div class="tile">
                <div class="tile-body">
                    <div class="table-responsive">
                        <table class="table table-hover table-bordered" id="tadministrador">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EmpleadoCreate.Nombre)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EmpleadoCreate.Cedula)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EmpleadoCreate.Correo)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EmpleadoCreate.Puesto)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EmpleadoCreate.Estado)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EmpleadoCreate.Rol.Descripcion)
                                    </th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    foreach (var item in Model.Empleado)
                                    {
                                        @if (Context.Request.Cookies["Id"] != item.Id.ToString())
                                        {
                                            <tr>
                                                <td>
                                                    @NombreCompleto(item.Nombre, item.Apellidos)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Cedula)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Correo)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Puesto)
                                                </td>

                                                <td>
                                                    @if (item.Estado)
                                                    {

                                                        <span class="badge badge-success">Activo</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Inactivo</span>

                                                    }

                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Rol.Descripcion)
                                                </td>
                                                <td>
                                                    @if (Context.Request.Cookies["Id"] != item.Id.ToString())
                                                    {
                                                        <a class="btn btn-primary" onclick="OpenModalModifyRegistroEmpleadoRol(this,'mdlModifyEmpleado',0)" data-registro='@JsonConvert.SerializeObject(item)' style="color:white;">Cambiar rol </a>
                                                        <a class="btn btn-info" onclick="GeneratePassword('@JsonConvert.SerializeObject(item)')" style="color:white;">Generar contraseña</a>

                                                    }

                                                </td>


                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div>
        <h3>Lo sentimos no tenemos datos por mostrar</h3>
    </div>
}




@*Modal to modify Empleado*@
<div class="modal fade" id="mdlModifyEmpleado">
    <div class="modal-dialog modal-lg dialogPDF">
        <div class="modal-content contentPDF">
            <div class="modal-header" style="background-color: #007C89; color:white; justify-content: center; ">
                <h5 class="modal-title" id="lblTitle">Modificar rol</h5>
            </div>
            <form asp-controller="Empleado" asp-action="ModificarEmpleadoModalRol" method="post">
                @* <input type="hidden" name="Id" id="IdEmpleadoModify" asp-for="EmpleadoModify.Id" />
                <input type="hidden" name="Contrasena" id="ContrasenaEmpleadoModify" asp-for="EmpleadoModify.Contrasena" />
                <input type="hidden" name="DiasDisponibles" id="DiasDisponiblesEmpleadoModify" asp-for="EmpleadoModify.DiasDisponibles" /> *@


                <div class="modal-body">
                    <input type="hidden" id="hdfEstado" value="0" />
                    <input type="hidden" id="hdfId" value="0" />
                    <div class="row" style=" padding-left: 1rem;">

                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label style="font-size:large" for="ddlModifyRolModal">Rol actual del usuario</label>
                                    <input type="hidden" name="Id" id="IdEmpleadoModify" asp-for="EmpleadoRol.Id" />
                                  
                                    <br />
                                    <label id="lblRolActual" style="font-size:large"></label>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 pt-4 p-0">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label style="font-size:large" for="ddlModifyRolModalRol">Seleccione el rol</label>
                                    <input type="hidden" name="IdRol" id="IdRolEmpleadoModifyRol" asp-for="EmpleadoRol.IdRol" />
                                    <input style="font-size:large; " type="text" id="ddlModifyRolModalRol" list="ModifyRolList" class="form-control" placeholder="Buscar Rol..." autocomplete="off">
                                    <datalist id="ModifyRolList">

                                        @{
                                            if (Model.ListaRol != null)
                                            {
                                                foreach (var item in Model.ListaRol)
                                                {
                                                        <option value="@item.Id" data-id="@item.Id">@item.Nombre</option>
                                                }
                                            }
                                        }
                                    </datalist>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <br />
                <div class="modal-footer">
                    <button type="submit" id="btnModifyEmpleado" class="btn btn-primary">Aceptar</button>
                    <button type="button" id="btnCloseModalModifyEmpleado" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/plugins/jquery.datatables.min.js"></script>
    <script src="~/js/plugins/datatables.bootstrap.min.js"></script>
    <script type="text/javascript">$('#tadministrador').DataTable();</script>
    <script>

        $(document).ready(function () {
            $('.cambiar-estado-btn').click(function (e) {
                e.preventDefault();

                var id = $(this).data('id');

                // Mostrar confirmación con SweetAlert2
                Swal.fire({
                    title: 'Confirmación',
                    text: '¿Estás seguro de que deseas cambiar el estado?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Sí',
                    cancelButtonText: 'No'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Realizar la llamada AJAX si se confirma la acción
                        $.ajax({
                            url: '@Url.Action("CambiarEstado", "Empleado")',
                            type: 'POST',
                            success: function (response) {
                                // Mostrar mensaje de éxito con SweetAlert2
                                Swal.fire('Éxito', 'El estado ha sido cambiado correctamente.', 'success').then(function () {
                                    // Recargar la página
                                    location.reload();
                                });
                            },
                            error: function (xhr, status, error) {
                                // Mostrar mensaje de error con SweetAlert2
                                Swal.fire('Error', 'Ha ocurrido un error al cambiar el estado.', 'error');
                                console.error('Error:', error);
                            }
                        });
                    }
                });
            });

            $('form').on('submit', function (e) {
                showSpinner();

                e.preventDefault();

                var form = $(this);
                var url = form.attr('action');


                setTimeout(function () {
                    $.ajax({
                        type: 'POST',
                        url: url,
                        data: form.serialize(),
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Éxito',
                                    text: response.message,
                                    icon: 'success'
                                }).then(() => {
                                    window.location.href = '@Url.Action("GetAdmins", "Empleado")';
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error',
                                    text: response.errors,
                                    icon: 'error'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: 'Error',
                                text: 'Ocurrió un error inesperado.',
                                icon: 'error'
                            });
                        }
                    });

                    hideSpinner();
                }, 1000);
            });



            InitializerEventDropDownList('ddlModifyRolModalRol', 'ModifyRolList', 'IdRolEmpleadoModifyRol');
        });

        function GeneratePassword(registroJson) {
            var registro = JSON.parse(registroJson);

            Swal.fire({
                title: 'Confirmación',
                text: '¿Estás seguro de que desea modificar el rol??',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Sí',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("GenerarContrasenna", "Empleado")',
                        type: 'POST',
                        data: { id: registro.Id },
                        success: function (response) {
                            Swal.fire({
                                title: 'Éxito',
                                text: 'La contraseña ha sido generada y enviada al correo del empleado.',
                                icon: 'success'
                            });
                        },
                        error: function () {
                            Swal.fire({
                                title: 'Error',
                                text: 'Ocurrió un error al generar la contraseña.',
                                icon: 'error'
                            });
                        }
                    });
                }
            });

        
        }

        function OpenModalModifyRegistroEmpleadoRol(button, modal, option) {

            var RegistroJson = button.getAttribute("data-registro");
            var registro = JSON.parse(RegistroJson);
            console.log(registro);


            $('#IdEmpleadoModify').val(registro.Id);
                $('#lblRolActual').text(registro.Rol.Nombre);
              
               // ActivateInputEvent('ddlModifyProvinciaModal');
               
                

                // $('#txtIdentificacion').prop('readonly', false);
                // $('#ddlModifyProvinciaModal').prop('readonly', false);
                // $('#ddlModifyCantonModal').prop('readonly', false);
         
            

            OpenModal(modal);

        }


        function InitializerEventDropDownList(DropDownInput, dataList, HDF) {
            var typingTimer;
            var doneTypingInterval = 1000;

            document.getElementById(DropDownInput).addEventListener("input", function () {
                clearTimeout(typingTimer);

                typingTimer = setTimeout(function () {
                    var inputValue = document.getElementById(DropDownInput).value.toLowerCase();
                    var inputObject = document.getElementById(DropDownInput);
                    var options = document.getElementById(dataList).options;

                    for (var i = 0; i < options.length; i++) {
                        var option = options[i];
                        var text = option.textContent.toLowerCase();

                        if (text.indexOf(removeAccents(inputValue)) !== -1) {
                            option.style.display = "block";
                        } else {
                            option.style.display = "none";
                        }
                    }
                    var selectedOption = null;
                    for (var i = 0; i < options.length; i++) {
                        if (options[i].value.toLowerCase() === inputObject.value.toLowerCase()) {
                            selectedOption = options[i];

                            break;
                        }
                    }
                    if (selectedOption) {
                        inputObject.value = selectedOption.textContent;
                        document.getElementById(HDF).value = selectedOption.getAttribute('data-id');



                    }
                    else {
                        document.getElementById(HDF).value = '';
                    }
                    if (GetDropDownValueSelected(DropDownInput, dataList) === null) {
                        inputObject.value = '';
                        inputObject.placeholder = "No se encontró el registro digitado";


                        typingTimer = setTimeout(function () {
                            inputObject.placeholder = "Seleccione una opción...";
                        }, 700)
                    }
                    else {


                        document.getElementById(DropDownInput).value = GetDropDownTextContentSelected(DropDownInput, dataList);
                        options[0].selected = true;
                    }
                }, doneTypingInterval);


            });
        }

    </script>

}